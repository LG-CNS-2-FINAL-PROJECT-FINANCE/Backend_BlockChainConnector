server:
  port: 8080

spring:
  kafka:
    listener:
      ack-mode: manual_immediate
    consumer:
      group-id: ${spring.application.name}
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      enable-auto-commit: false
      auto-offset-reset: latest
      max-poll-records: 10
      properties:
        spring.json.trusted.packages: "*"
        spring.json.use.type.headers: false # 헤더의 타입 정보 무시
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.add.type.headers: false # 타입 헤더 추가 비활성화
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}

jenkins:
  url: ${JENKINS_URL}
  job: ${JENKINS_JOB}
  username: ${JENKINS_USERNAME}
  api-token: ${JENKINS_API_TOKEN}
  authentication-token: ${JENKINS_AUTHENTICATION_TOKEN}

blockchain:
  admin:
    key:
      private-key: ${PRIVATE_KEY_ADMIN}
  sepolia:
    rpc:
      url: ${SEPOLIA_RPC_URL}
  etherscan:
    api:
      key: ${ETHERSCAN_API_KEY}